{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\etc\\\\udemy_react\\\\323-next\\\\pages\\\\index.jsx\";\nimport Head from 'next/head';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // getStaticProps와의 차이점은 빌드 프로세스 중에는 실행되지 않음.\n// 대신 서버에서 실행함.\n// 요청이 들어올 때마다 실행됨.\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n// 초기에 페이지가 생성되기 전에 backend에서 데이터를 미리 불러서 페이지를 사전생성 해주기 위함.\n// 클라이언트에서 이 코드를 볼 수 없기에 여기에 db 정보를 작성해도 됨.\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/etc/udemy_react/323-next/pages/index.jsx"],"names":["Head","MeetupList","HomePage","props","meetups"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;KA7BSF,Q;;AAwDT,eAAeA,QAAf","sourcesContent":["import Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nfunction HomePage(props) {\n  return (\n    <>\n      <Head>\n        <title>React Meetups</title>\n        <meta name=\"description\" content=\"Browse a huge list of highly active React meetups!!\" />\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n}\n\n// getStaticProps와의 차이점은 빌드 프로세스 중에는 실행되지 않음.\n// 대신 서버에서 실행함.\n// 요청이 들어올 때마다 실행됨.\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n\n//   // fetch data from an API\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n// 초기에 페이지가 생성되기 전에 backend에서 데이터를 미리 불러서 페이지를 사전생성 해주기 위함.\n// 클라이언트에서 이 코드를 볼 수 없기에 여기에 db 정보를 작성해도 됨.\nexport async function getStaticProps() {\n  // fetch data from an API\n  const client = await MongoClient.connect(\n    'mongodb+srv://sonky740:minwise4014@cluster0.reatrgr.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n      })),\n    },\n    revalidate: 10, // 초마다 데이터를 체크하여 페이지를 사전생성하여 교체함.\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}